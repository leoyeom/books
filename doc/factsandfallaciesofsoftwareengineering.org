* 우리가 미처 알지 못한 소프트웨어 공학의 사실과 오해 / 로버트 L 글래스 / 인사이트

** 1장. 관리
*** 뛰어난 관리가 뛰어난 기술보다 중요하다. 더욱 인저하기 싫지만 Al의 말이 옳다.
1. 나는 내가 직접 하고 싶었지, 다른 사람이 하도록 지시하고 싶지 않았다.
2. 나는 내가 마음대로 결정할 수 있는 자유를 원했지, 중간에서 자기 위에 있는 관리자의 결정을 가끔 전달만 하는 관리자가 되고 싶지 않았다.

 사람(people)
 * 정말 중요한 것은 사람이다.
 * 어떤 사람은 다른 사람보다 놀라울 정도로 뛰어나다.
 * 많은 프로젝트의 성공과 실패는 어떻게 수행하는가보다 누가 수행하는가에 따라 결정된다.

 도구와 기술(결국은 보통 경영진이 선택하는)
 * 과대광고는 득보다 해가 된다.
 * 새로운 접근방법으로 전환하면, 처음에는 효율이 향상되기보다 저하된다.
 * 최신의 도구나 기술이 실제로 사용되는 경우는 드물다.

 추정(estimation)
 * 우리의 추정은 부정확한 경우가 많다.
 * 추정 작업을 위한 프로세스 또한 형편없다.
 * 이런 허술한 추정 목표를 달성하는 데 실패한 것과, 이보다 훨씬 중요한 프로젝트의 실패를 동일시 한다.
 * 추정을 사이에 두고 경영진과 기술자 사이에 단절이 존재한다.

 재사용(reuse)
 * 우리는 오랬동안 재사용을 해왔다.
 * 최근 재사용은 거의 진전을 이루지 못했다.
 * 일부 사람들은 재사용에 지나치게 큰 기대를 한다.

 복잡성(complexity)
 * 소프트웨어 구축의 많은 문제는 복잡성에 기인한다.
 * 복잡성은 매우 빠르게 증가한다.
 * 이 복잡성을 극복하기 위해서는 매우 뛰어난 사람들이 필요하다.

*** Fact.1 소프트웨어 작업에서 가장 중요한 요소는 프로그래머가 사용하는 도구나 기술이 아니라, 프로그래머의 자질이다.
 사람의 중요성과 관련된 논쟁은 미묘하다. 사람이 중요하다는 생각에 대해 모두들 말로는 찬성한다. 거의 모두가 표면적으로는 사람이 도구나 기술, 프로세스보다 중요하다는 것에 동의하지만, 행동은 이와 다르게 한다. 아마도 사람이 도구나 기술, 프로세스보다 접근하기 어려운 문제기 때문일 것이다. 이것은 60년이나 된 시리즈인 '꼬마 바보' 유머와도 같다.
 꼬마 바보가 가로등 아래서 뭔가를 찾는 것 같았다. 뭘 하고 있냐고 묻자, "열쇠를 잃어버렸어요."하고 대답했다. "어디서 잃어버렸는데?" 꼬마 바보는 손가락으로 가리키며 말했다. "저쪽에서요." "그럼 왜 이 가로등 밑에서 찾는거지?" 꼬마 바보는 대답했다. "이쪽이 더 밝기 때문이죠."
 소프트웨어 분야에 있는 우리는 모두 마음속으로는 기술자라고 생각하며, 우리의 작업을 쉽게 하는 새로운 기술을 고안하는 것을 더 좋아한다. 마음속 깊은 곳에서는 사람과 관련된 문제가 더 중요하다는 것을 알면서 말이다.

 "만약 당신의 생명이 특정 소프트웨어에 의존하게 된다면 어떤 것에 대해 알고 싶습니까?" 
Bollinger,
 "무엇보다도, 저는 소프트웨어를 작성한 사람이 매우 지적인지, 또 매우 엄격해서 자신이 작성한 프로그램이 정확하게 작동하도록하려는 광적인 욕구가 있는지 알고 싶습니다. 다른 모든 것은 저에겐 부차적인 것입니다."

*** Fact.2 '개인차'에 관한 연구에 따르면, 최상의 프로그래머는 최악의 프로그래머보다 28배 더 뛰어나다. 여기에 비례해서 이들에게 임금을 28배 주는 것이 아니라면, 이들은 소프트웨어 분야에서 가장 값싸고 훌륭한 자원이다.
 Al Davis 
 원리 132 기술이 부족한 다수의 사람 보다는 뛰어난 소수의 사람이 낫다.
 원리 141 소프트웨어 엔지니어들도 개인에 따라 커다란 차이가 있다.

*** Fact.3 지체된 프로젝트에 사람을 추가 투입하면 프로젝트가 더 늦어진다.
 Brooks의 법칙.

*** Fact.4 작업환경은 생산성과 품질에 지대한 영향을 미친다.
 간단히 말하자면, 소프트웨어 작업은 사고 집약적(thought-intensive)이므로, 작업환경은 생각을 촉진하는 곳이어야 한다. 사람이 붐벼서(의도적이든 그렇지 않든) 자꾸 방해를 받는다면 거의 일을 진행할 수 없게 된다.
 피플웨어(DeMarco and Lister 1999)는 상당한 분량을 할애하여 작업환경이 어떻게, 어떤식으로 영향을 미치는지 설명한다.
 상위 25% 그룹은 하위 25% 그룹보다 업무 효율이 2.6배 뛰어났다. 상위 그룹은 1.7배 넓은 공간에서 일했다. 상위 그룹 사람들은 작업환경이 충분히 조용하다고 대답한 비율이 2배 높았고 개인적인 공간이라고 대답한 비율은 3배 높았으며 전화를 다른 곳으로 돌리거나 꺼 놓을 수 있다고 대답한 비율은 각각 4배와 5배 이상 많았다.
 "단단한(hard) 것이 부드러운(soft) 것을 몰아낸다."는 옛 말이 있다. 즉 정확하게 측정 가능한(단단한) 것은 그렇지 못한(부드러운) 것에 대해 관심을 가지지 못하도록 하는 경향이 있다. ... 사무실 공간은 측정하기 쉽다. 생산성 이득은 측정하기 어렵다. 어떤 것이 이기겠는가.

*** Fact.5 소프트웨어 업계에는 과대 선전이 만연해 있다. 소프트웨어 도구와 기술의 진보로 인해 생산성과 품질이 5~35% 향상된다고 한다. 그러나 예전에도 이 정도의 향상은 10배 이상 뛰어난 사람이 있으면 가능한 일이었다.
 

         
